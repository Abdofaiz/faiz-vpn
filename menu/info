#!/bin/bash
# System Information Script

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m'

show_menu() {
    clear
    echo -e "${BLUE}=============================${NC}"
    echo -e "${YELLOW}     SYSTEM INFO     ${NC}"
    echo -e "${BLUE}=============================${NC}"
    echo -e ""
    echo -e "${GREEN}1${NC}. System Information"
    echo -e "${GREEN}2${NC}. Service Status"
    echo -e "${GREEN}3${NC}. Network Info"
    echo -e "${GREEN}4${NC}. User Info"
    echo -e "${GREEN}5${NC}. Resource Usage"
    echo -e "${GREEN}6${NC}. Script Version"
    echo -e "${GREEN}0${NC}. Back to Main Menu"
    echo -e ""
    echo -e "${BLUE}=============================${NC}"
}

system_info() {
    echo -e "${YELLOW}System Information:${NC}"
    echo -e "------------------------"
    echo -e "OS: $(cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2)"
    echo -e "Kernel: $(uname -r)"
    echo -e "Hostname: $(hostname)"
    echo -e "Uptime: $(uptime -p)"
    echo -e "CPU: $(grep "model name" /proc/cpuinfo | head -1 | cut -d':' -f2)"
    echo -e "Memory: $(free -h | grep Mem | awk '{print $2}')"
    echo -e "Disk: $(df -h / | awk 'NR==2 {print $2}')"
    echo -e "IP: $(curl -s ipv4.icanhazip.com)"
}

service_status() {
    echo -e "${YELLOW}Service Status:${NC}"
    echo -e "------------------------"
    services=("ssh" "dropbear" "stunnel4" "xray" "nginx" "fail2ban")
    for service in "${services[@]}"; do
        status=$(systemctl is-active $service)
        if [ "$status" = "active" ]; then
            echo -e "$service: ${GREEN}RUNNING${NC}"
        else
            echo -e "$service: ${RED}STOPPED${NC}"
        fi
    done
}

network_info() {
    echo -e "${YELLOW}Network Information:${NC}"
    echo -e "------------------------"
    echo -e "Hostname: $(hostname)"
    echo -e "Domain: $(cat /etc/xray/domain)"
    echo -e "IP: $(curl -s ipv4.icanhazip.com)"
    echo -e "\nPorts in use:"
    netstat -tuln | grep LISTEN
}

user_info() {
    echo -e "${YELLOW}User Information:${NC}"
    echo -e "------------------------"
    echo -e "\nSSH Users:"
    awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd
    echo -e "\nXRAY Users:"
    cat /usr/local/etc/xray/config.json | jq -r '.inbounds[0].settings.clients[].email'
}

resource_usage() {
    echo -e "${YELLOW}Resource Usage:${NC}"
    echo -e "------------------------"
    echo -e "CPU Usage: $(top -bn1 | grep "Cpu(s)" | awk '{print $2 + $4}')%"
    echo -e "\nMemory Usage:"
    free -h
    echo -e "\nDisk Usage:"
    df -h
    echo -e "\nTop Processes:"
    ps aux --sort=-%cpu | head -5
}

script_version() {
    echo -e "${YELLOW}Script Information:${NC}"
    echo -e "------------------------"
    echo -e "Version: $(cat /root/autoscript/version)"
    echo -e "Last Update: $(stat -c %y /root/autoscript/version | cut -d' ' -f1)"
    echo -e "\nInstalled Services:"
    dpkg -l | grep -E "nginx|xray|stunnel4|dropbear"
}

while true; do
    show_menu
    read -p "Select option: " choice
    case $choice in
        1) system_info ;;
        2) service_status ;;
        3) network_info ;;
        4) user_info ;;
        5) resource_usage ;;
        6) script_version ;;
        0) break ;;
        *) echo -e "${RED}Invalid option${NC}" ;;
    esac
    read -n 1 -s -r -p "Press any key to continue"
done 