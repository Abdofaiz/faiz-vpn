#!/bin/bash
# Server Status Checker

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m'

show_menu() {
    clear
    echo -e "${BLUE}=============================${NC}"
    echo -e "${YELLOW}    SERVER STATUS CHECKER    ${NC}"
    echo -e "${BLUE}=============================${NC}"
    echo -e ""
    echo -e "${GREEN}1${NC}. Check Server Response"
    echo -e "${GREEN}2${NC}. Check SSL Certificate"
    echo -e "${GREEN}3${NC}. Check Server Banner"
    echo -e "${GREEN}4${NC}. Check All Services"
    echo -e "${GREEN}0${NC}. Back to Main Menu"
    echo -e ""
    echo -e "${BLUE}=============================${NC}"
}

check_response() {
    echo -e "${YELLOW}Checking Server Response...${NC}"
    echo -e "\nSSH Service:"
    nc -zv localhost 22 2>&1
    
    echo -e "\nXRAY Service:"
    nc -zv localhost 443 2>&1
    
    echo -e "\nWebSocket Service:"
    nc -zv localhost 80 2>&1
}

check_certificate() {
    domain=$(cat /etc/xray/domain 2>/dev/null)
    if [ -z "$domain" ]; then
        echo -e "${RED}No domain configured${NC}"
        return
    }
    
    echo -e "${YELLOW}Checking SSL Certificate for $domain...${NC}"
    echo | openssl s_client -servername $domain -connect $domain:443 2>/dev/null | openssl x509 -noout -dates
}

check_banner() {
    echo -e "${YELLOW}Current Server Banners:${NC}"
    echo -e "\nSSH Banner:"
    cat /etc/issue.net 2>/dev/null || echo "No SSH banner configured"
    
    echo -e "\nNginx Server Response:"
    curl -I localhost 2>/dev/null | grep "Server"
}

check_services() {
    echo -e "${YELLOW}Checking All Services...${NC}"
    
    services=("ssh" "nginx" "xray" "ws-service" "fail2ban")
    
    for service in "${services[@]}"; do
        status=$(systemctl is-active $service)
        if [ "$status" = "active" ]; then
            echo -e "$service: ${GREEN}RUNNING${NC}"
        else
            echo -e "$service: ${RED}STOPPED${NC}"
        fi
    done
    
    echo -e "\n${YELLOW}Open Ports:${NC}"
    netstat -tulpn | grep LISTEN
}

while true; do
    show_menu
    read -p "Select option: " choice
    case $choice in
        1) check_response ;;
        2) check_certificate ;;
        3) check_banner ;;
        4) check_services ;;
        0) break ;;
        *) echo -e "${RED}Invalid option${NC}" ;;
    esac
    read -n 1 -s -r -p "Press any key to continue"
done 