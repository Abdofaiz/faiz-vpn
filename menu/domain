#!/bin/bash
# Domain Manager Script

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m'

show_menu() {
    clear
    echo -e "${BLUE}=============================${NC}"
    echo -e "${YELLOW}     DOMAIN MANAGER     ${NC}"
    echo -e "${BLUE}=============================${NC}"
    echo -e ""
    echo -e "${GREEN}1${NC}. Add Domain"
    echo -e "${GREEN}2${NC}. Change Domain"
    echo -e "${GREEN}3${NC}. Delete Domain"
    echo -e "${GREEN}4${NC}. List Domains"
    echo -e "${GREEN}5${NC}. Check Domain"
    echo -e "${GREEN}6${NC}. DNS Settings"
    echo -e "${GREEN}0${NC}. Back to Main Menu"
    echo -e ""
    echo -e "${BLUE}=============================${NC}"
}

add_domain() {
    read -p "Enter domain name: " domain
    echo -e "${YELLOW}Checking domain...${NC}"
    
    if host $domain >/dev/null 2>&1; then
        echo "$domain" > /etc/xray/domain
        echo -e "${GREEN}Domain added successfully${NC}"
        
        read -p "Generate SSL certificate? (y/n): " cert
        if [[ $cert =~ ^[Yy]$ ]]; then
            certbot certonly --standalone -d $domain --email admin@$domain --agree-tos --non-interactive
            systemctl restart nginx xray
        fi
    else
        echo -e "${RED}Domain not found or DNS not propagated${NC}"
    fi
}

change_domain() {
    current=$(cat /etc/xray/domain)
    echo -e "Current domain: $current"
    read -p "Enter new domain: " domain
    
    if host $domain >/dev/null 2>&1; then
        echo "$domain" > /etc/xray/domain
        sed -i "s/$current/$domain/g" /etc/nginx/conf.d/xray.conf
        echo -e "${GREEN}Domain changed successfully${NC}"
        
        read -p "Generate new SSL certificate? (y/n): " cert
        if [[ $cert =~ ^[Yy]$ ]]; then
            certbot delete --cert-name $current
            certbot certonly --standalone -d $domain --email admin@$domain --agree-tos --non-interactive
            systemctl restart nginx xray
        fi
    else
        echo -e "${RED}Domain not found or DNS not propagated${NC}"
    fi
}

delete_domain() {
    current=$(cat /etc/xray/domain)
    echo -e "Current domain: $current"
    read -p "Are you sure you want to delete this domain? (y/n): " confirm
    
    if [[ $confirm =~ ^[Yy]$ ]]; then
        rm -f /etc/xray/domain
        certbot delete --cert-name $current
        systemctl restart nginx xray
        echo -e "${GREEN}Domain deleted successfully${NC}"
    fi
}

list_domains() {
    echo -e "${YELLOW}Configured Domains:${NC}"
    echo -e "------------------------"
    if [ -f "/etc/xray/domain" ]; then
        echo -e "Main domain: $(cat /etc/xray/domain)"
    fi
    echo -e "\nSSL Certificates:"
    certbot certificates
}

check_domain() {
    read -p "Enter domain to check: " domain
    echo -e "${YELLOW}Domain Information:${NC}"
    echo -e "------------------------"
    echo -e "DNS Resolution:"
    host $domain
    echo -e "\nSSL Certificate:"
    echo | openssl s_client -servername $domain -connect $domain:443 2>/dev/null | openssl x509 -noout -dates -issuer -subject
    echo -e "\nDNS Records:"
    dig +short $domain
}

dns_settings() {
    echo -e "${YELLOW}DNS Settings:${NC}"
    echo -e "1. Show DNS records"
    echo -e "2. Update DNS"
    echo -e "3. Check propagation"
    read -p "Select option: " choice
    
    case $choice in
        1)
            domain=$(cat /etc/xray/domain)
            echo -e "\nDNS Records for $domain:"
            dig +short $domain
            ;;
        2)
            echo -e "\nRequired DNS records:"
            echo -e "Type: A"
            echo -e "Name: @"
            echo -e "Content: $(curl -s ipv4.icanhazip.com)"
            ;;
        3)
            domain=$(cat /etc/xray/domain)
            echo -e "\nChecking DNS propagation for $domain..."
            host $domain
            ;;
        *) echo -e "${RED}Invalid option${NC}" ;;
    esac
}

while true; do
    show_menu
    read -p "Select option: " choice
    case $choice in
        1) add_domain ;;
        2) change_domain ;;
        3) delete_domain ;;
        4) list_domains ;;
        5) check_domain ;;
        6) dns_settings ;;
        0) break ;;
        *) echo -e "${RED}Invalid option${NC}" ;;
    esac
    read -n 1 -s -r -p "Press any key to continue"
done 