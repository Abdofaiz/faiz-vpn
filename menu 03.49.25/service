#!/bin/bash
# Service Manager Script

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m'

show_menu() {
    clear
    echo -e "${BLUE}=============================${NC}"
    echo -e "${YELLOW}     SERVICE MANAGER     ${NC}"
    echo -e "${BLUE}=============================${NC}"
    echo -e ""
    echo -e "${GREEN}1${NC}. Start Service"
    echo -e "${GREEN}2${NC}. Stop Service"
    echo -e "${GREEN}3${NC}. Restart Service"
    echo -e "${GREEN}4${NC}. Service Status"
    echo -e "${GREEN}5${NC}. Enable Service"
    echo -e "${GREEN}6${NC}. Disable Service"
    echo -e "${GREEN}0${NC}. Back to Main Menu"
    echo -e ""
    echo -e "${BLUE}=============================${NC}"
}

start_service() {
    echo -e "${YELLOW}Select service to start:${NC}"
    echo -e "1. SSH"
    echo -e "2. Dropbear"
    echo -e "3. Stunnel4"
    echo -e "4. OpenVPN"
    echo -e "5. XRAY"
    echo -e "6. Nginx"
    echo -e "7. All Services"
    read -p "Enter choice: " service
    
    case $service in
        1) systemctl start ssh ;;
        2) systemctl start dropbear ;;
        3) systemctl start stunnel4 ;;
        4) systemctl start openvpn ;;
        5) systemctl start xray ;;
        6) systemctl start nginx ;;
        7)
            systemctl start ssh
            systemctl start dropbear
            systemctl start stunnel4
            systemctl start openvpn
            systemctl start xray
            systemctl start nginx
            ;;
        *) echo -e "${RED}Invalid option${NC}" ; return ;;
    esac
    echo -e "${GREEN}Service(s) started${NC}"
}

stop_service() {
    echo -e "${YELLOW}Select service to stop:${NC}"
    echo -e "1. SSH"
    echo -e "2. Dropbear"
    echo -e "3. Stunnel4"
    echo -e "4. OpenVPN"
    echo -e "5. XRAY"
    echo -e "6. Nginx"
    echo -e "7. All Services"
    read -p "Enter choice: " service
    
    case $service in
        1) systemctl stop ssh ;;
        2) systemctl stop dropbear ;;
        3) systemctl stop stunnel4 ;;
        4) systemctl stop openvpn ;;
        5) systemctl stop xray ;;
        6) systemctl stop nginx ;;
        7)
            systemctl stop nginx
            systemctl stop xray
            systemctl stop openvpn
            systemctl stop stunnel4
            systemctl stop dropbear
            systemctl stop ssh
            ;;
        *) echo -e "${RED}Invalid option${NC}" ; return ;;
    esac
    echo -e "${GREEN}Service(s) stopped${NC}"
}

restart_service() {
    echo -e "${YELLOW}Select service to restart:${NC}"
    echo -e "1. SSH"
    echo -e "2. Dropbear"
    echo -e "3. Stunnel4"
    echo -e "4. OpenVPN"
    echo -e "5. XRAY"
    echo -e "6. Nginx"
    echo -e "7. All Services"
    read -p "Enter choice: " service
    
    case $service in
        1) systemctl restart ssh ;;
        2) systemctl restart dropbear ;;
        3) systemctl restart stunnel4 ;;
        4) systemctl restart openvpn ;;
        5) systemctl restart xray ;;
        6) systemctl restart nginx ;;
        7)
            systemctl restart ssh
            systemctl restart dropbear
            systemctl restart stunnel4
            systemctl restart openvpn
            systemctl restart xray
            systemctl restart nginx
            ;;
        *) echo -e "${RED}Invalid option${NC}" ; return ;;
    esac
    echo -e "${GREEN}Service(s) restarted${NC}"
}

service_status() {
    echo -e "${YELLOW}Service Status:${NC}"
    echo -e "------------------------"
    services=("ssh" "dropbear" "stunnel4" "openvpn" "xray" "nginx")
    for service in "${services[@]}"; do
        status=$(systemctl is-active $service)
        if [ "$status" = "active" ]; then
            echo -e "$service: ${GREEN}RUNNING${NC}"
        else
            echo -e "$service: ${RED}STOPPED${NC}"
        fi
    done
}

enable_service() {
    echo -e "${YELLOW}Select service to enable:${NC}"
    echo -e "1. SSH"
    echo -e "2. Dropbear"
    echo -e "3. Stunnel4"
    echo -e "4. OpenVPN"
    echo -e "5. XRAY"
    echo -e "6. Nginx"
    echo -e "7. All Services"
    read -p "Enter choice: " service
    
    case $service in
        1) systemctl enable ssh ;;
        2) systemctl enable dropbear ;;
        3) systemctl enable stunnel4 ;;
        4) systemctl enable openvpn ;;
        5) systemctl enable xray ;;
        6) systemctl enable nginx ;;
        7)
            systemctl enable ssh
            systemctl enable dropbear
            systemctl enable stunnel4
            systemctl enable openvpn
            systemctl enable xray
            systemctl enable nginx
            ;;
        *) echo -e "${RED}Invalid option${NC}" ; return ;;
    esac
    echo -e "${GREEN}Service(s) enabled${NC}"
}

disable_service() {
    echo -e "${YELLOW}Select service to disable:${NC}"
    echo -e "1. SSH"
    echo -e "2. Dropbear"
    echo -e "3. Stunnel4"
    echo -e "4. OpenVPN"
    echo -e "5. XRAY"
    echo -e "6. Nginx"
    echo -e "7. All Services"
    read -p "Enter choice: " service
    
    case $service in
        1) systemctl disable ssh ;;
        2) systemctl disable dropbear ;;
        3) systemctl disable stunnel4 ;;
        4) systemctl disable openvpn ;;
        5) systemctl disable xray ;;
        6) systemctl disable nginx ;;
        7)
            systemctl disable nginx
            systemctl disable xray
            systemctl disable openvpn
            systemctl disable stunnel4
            systemctl disable dropbear
            systemctl disable ssh
            ;;
        *) echo -e "${RED}Invalid option${NC}" ; return ;;
    esac
    echo -e "${GREEN}Service(s) disabled${NC}"
}

while true; do
    show_menu
    read -p "Select option: " choice
    case $choice in
        1) start_service ;;
        2) stop_service ;;
        3) restart_service ;;
        4) service_status ;;
        5) enable_service ;;
        6) disable_service ;;
        0) break ;;
        *) echo -e "${RED}Invalid option${NC}" ;;
    esac
    read -n 1 -s -r -p "Press any key to continue"
done 